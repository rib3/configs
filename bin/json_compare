#!/usr/bin/env python

from cmdutils.git import GitVersion
from subprocess import check_output
from os import path
import requests
import json
import sys

def headers():
    try:
        with open('tmp/json_compare/.headers') as f:
            lines = [line.strip().split(': ', 2) for line in f]
            return dict(lines)
    except:
        pass

def urls():
    try:
        with open('tmp/json_compare/.urls') as f:
            return json.loads(f.read())
    except IOError:
        raise Exception('DIE')
    except TypeError:
        raise Exception('Problem with format of url file')

def url_by_name(name):
    try:
        return urls()[name]
    except KeyError:
        raise Exception('url not found {}'.format(name))

def format_json(js):
    return json.dumps(js, sort_keys=True, indent=4)

def main():
    name = sys.argv[1]
    url = url_by_name(name)
    r = requests.get(url, headers=headers())
    version = GitVersion()
    fname = write_version(name, r.json(), version)

def write_version(name, data, version):
    fname = '.'.join([name, str(version), 'json'])
    fname = path.join('tmp', 'json_compare', fname)
    with open(fname, 'w') as f:
        f.write(format_json(data))
    print 'wrote', fname
    return fname

if __name__ == '__main__':
    main()
