#!/usr/bin/env python2

from __future__ import print_function
import argparse
import datetime
import os
import re

parser = argparse.ArgumentParser(description='Rename rotated logfiles')
parser.add_argument('--dry-run', action='store_true')

def get_files():
    return filter(os.path.isfile, os.listdir('.'))

archive_re = re.compile(
        '(?P<base>.*)'
        '(?P<archive>[.-]\d+)'
        '(?P<compress>\.gz)?'
        '$'
        )

def match_archive(filename):
    return archive_re.match(filename)

def mdatetime(path):
    return datetime.datetime.fromtimestamp(os.path.getmtime(path))

def target_filename(path):
    match = match_archive(path)
    if match:
        mtime = mdatetime(path)
        date_ext = mtime.strftime('-%Y%m%d') # logrotate default dateext dateformat
        new_parts = [match.group('base'), date_ext, match.group('compress')]
        return ''.join(filter(None, new_parts))
    return path

def update_file(path, args):
    new_path = target_filename(path)
    if path != new_path:
        print('{} -> {}'.format(path, new_path))
        if os.path.exists(new_path):
            print('ERROR: {} already exists'.format(new_path))
        else:
            if not args.dry_run:
                os.rename(path, new_path)

def main():
    args = parser.parse_args()
    for path in get_files():
        update_file(path, args)

if __name__ == '__main__':
    main()
