#!/bin/bash
set -euo pipefail

# create and/or update a python virtualenv

VENV_DIR='venv'
PY_VERSION='python3.5'
REQUIREMENTS_BASE='requirements-base.txt'
REQUIREMENTS_FREEZE='requirements.txt'

if [ "${1:-}" == "base" ]; then
  echo "resetting venv and installing base requirements"
  REQUIREMENTS="${REQUIREMENTS_BASE}"
  rm -rf "${VENV_DIR}"
else
  REQUIREMENTS="${REQUIREMENTS_FREEZE}"
fi

if [ ! -f "${REQUIREMENTS}" ]; then
  (>&2 echo "missing requirements file: ${REQUIREMENTS}")
  exit 1
fi

echo "creating/updating virtualenv: ${VENV_DIR}"
test -d "${VENV_DIR}" || virtualenv "${VENV_DIR}" -p "${PY_VERSION}" --no-site-packages

echo "requirements file: ${REQUIREMENTS}"
"${VENV_DIR}/bin/pip" install -r "${REQUIREMENTS}"

if [ "${1:-}" == "base" ]; then
  echo "freezing to: ${REQUIREMENTS_FREEZE}"
  # pkg-resources exclusion for ubuntu: https://stackoverflow.com/a/40167445
  "${VENV_DIR}/bin/pip" freeze | grep -v "^pkg-resources" > "${REQUIREMENTS_FREEZE}"
fi
